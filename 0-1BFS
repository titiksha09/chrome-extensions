class Node 
{ 
    constructor(to,wt) 
    { 
        this.to = to; 
            this.weight = wt; 
    } 
      
} 
  
let numVertex = 9; 
let edges = new Array(numVertex); 
  
function _ZeroOneBFS() 
{ 
    for (let i = 0; i < edges.length; i++) { 
            edges[i] = []; 
        } 
} 
  
function addEdge(u,v,wt) 
{ 
    edges[u].push(edges[u].length, new Node(v, wt)); 
        edges[v].push(edges[v].length, new Node(u, wt)); 
} 
  
function zeroOneBFS(src) 
{ 
    // initialize distances from given source 
        let dist = new Array(numVertex); 
        for (let i = 0; i < numVertex; i++) { 
            dist[i] = Number.MAX_VALUE; 
        } 
            
        // double ended queue to do BFS 
        let queue = []; 
        dist[src] = 0; 
        queue.push(src); 
            
        while (queue.length!=0) { 
            let v = queue.shift(); 
            for (let i = 0; i < edges[v].length; i++) { 
    
                // checking for optimal distance 
                if (dist[edges[v][i].to] >  
                        dist[v] + edges[v][i].weight) { 
    
                    // update the distance 
                    dist[edges[v][i].to] = 
                          dist[v] + edges[v][i].weight; 
    
                    // put 0 weight edges to front and 1 
                    // weight edges to back so that vertices 
                    // are processed in increasing order of weight 
                    if (edges[v][i].weight == 0) { 
                        queue.unshift(edges[v][i].to); 
                    } else { 
                        queue.push(edges[v][i].to); 
                    } 
                } 
            } 
        } 
            
        for (let i = 0; i < dist.length; i++) { 
            document.write(dist[i] + " "); 
        } 
} 
  
_ZeroOneBFS(); 
addEdge(0, 1, 0); 
addEdge(0, 7, 1); 
addEdge(1, 7, 1); 
addEdge(1, 2, 1); 
addEdge(2, 3, 0); 
addEdge(2, 5, 0); 
addEdge(2, 8, 1); 
addEdge(3, 4, 1); 
addEdge(3, 5, 1); 
addEdge(4, 5, 1); 
addEdge(5, 6, 1); 
addEdge(6, 7, 1); 
addEdge(7, 8, 1); 
let src = 0;//source node 
zeroOneBFS(src); 
